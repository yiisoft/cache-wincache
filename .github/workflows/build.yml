on:
  - pull_request
  - push

name: build

jobs:
  tests:
    name: PHP ${{ matrix.php }}-${{ matrix.os }}

    env:
      extensions: curl, fileinfo, mbstring, openssl, wincache
      key: cache-v1

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - windows-latest

        php:
          - "7.4"
          - "8.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'
          coverage: pcov
          tools: composer:v2, pecl

      - name: Determine composer cache directory
        run: echo "COMPOSER_CACHE_DIR=~\AppData\Local\Composer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Cache dependencies installed with composer
        uses: actions/cache@v2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php }}-composer-

      - name: Update composer
        run: composer self-update

      - name: Choco install 7zip
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install 7zip

      - uses: suisei-cn/actions-download-file@v1
        id: wincache
        name: Download WinCache
        with:
          url: "https://netcologne.dl.sourceforge.net/project/wincache/development/wincache-2.0.0.8-dev-7.4-nts-vc15-x64.exe"
          target: C:\tools\php\ext

      - name: Install WinCache
        run: |
          cd C:\tools\php\ext
          7z e -y wincache-2.0.0.8-dev-7.4-nts-vc15-x64.exe

      - name: Update php.ini
        run: |
          cd C:\tools\php
          echo extension=php_wincache.dll >> php.ini
          echo wincache.enablecli=1 >> php.ini

      - name: Install dependencies with composer php 7.4
        if: matrix.php == '7.4'
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Install dependencies with composer php 8.0
        if: matrix.php == '8.0'
        run: composer update --ignore-platform-reqs --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Run tests with phpunit
        run: vendor/bin/phpunit --colors=always
